loading graph
n: 11
starting lipton tarjan...
g
[31m
**********************  Graph  **************************
vert 0   hos edges 6 10 4 
vert 1   hos edges 10 4 9 
vert 2   hos edges 6 3 10 
vert 3   hos edges 2 8 7 10 
vert 4   hos edges 1 5 9 0 
vert 5   hos edges 4 7 8 
vert 6   hos edges 0 2 7 
vert 7   hos edges 6 5 3 
vert 8   hos edges 3 10 5 
vert 9   hos edges 1 4 
vert 10   hos edges 1 8 2 0 3 
*********************************************************

[0mg_copy
[31m
**********************  Graph  **************************
vert 0   hos edges 0 0 0 
vert 0   hos edges 0 0 0 
vert 0   hos edges 0 0 0 
vert 0   hos edges 0 0 0 0 
vert 0   hos edges 0 0 0 0 
vert 0   hos edges 0 0 0 
vert 0   hos edges 0 0 0 
vert 0   hos edges 0 0 0 
vert 0   hos edges 0 0 0 
vert 0   hos edges 0 0 
vert 0   hos edges 0 0 0 0 0 
*********************************************************

[0m[32m---------------------------- 1 - Check Planarity  ------------
[0mplanar ok
[31m
**********************  Graph  **************************
vert 0   hos edges 6 10 4 
vert 1   hos edges 10 4 9 
vert 2   hos edges 6 3 10 
vert 3   hos edges 2 8 7 10 
vert 4   hos edges 1 5 9 0 
vert 5   hos edges 4 7 8 
vert 6   hos edges 0 2 7 
vert 7   hos edges 6 5 3 
vert 8   hos edges 3 10 5 
vert 9   hos edges 1 4 
vert 10   hos edges 1 8 2 0 3 
*********************************************************

[0m[32m---------------------------- 2 - Connected Components --------
[0m# of components: 1
too big
biggest component: 0
[32m---------------------------- 3 - BFS and Levels ------------
[0m  tree edge 0, 6
  tree edge 0, 10
  tree edge 0, 4
  tree edge 6, 2
  tree edge 6, 7
  tree edge 10, 1
  tree edge 10, 8
  tree edge 10, 3
  tree edge 4, 5
  tree edge 4, 9
level/cost of vert 0: 0
level/cost of vert 1: 2
level/cost of vert 2: 2
level/cost of vert 3: 2
level/cost of vert 4: 1
level/cost of vert 5: 2
level/cost of vert 6: 1
level/cost of vert 7: 2
level/cost of vert 8: 2
level/cost of vert 9: 2
level/cost of vert 10: 1
L[0]: 1
L[1]: 3
L[2]: 7
L[3]: 0
[32m---------------------------- 4 - l1 and k  ------------
[0mk:  11      # of verts in levels 0 thru l1
l1: 2      total cost of levels 0 thru l1 barely exceeds 1/2
[32m---------------------------- 5 - Find More Levels -------
[0msq:    6.63325
snk:   0
l0: 1     highest level <= l1
l2: 3     lowest  level >= l1 + 1
[32m---------------------------- 6 - Shrinktree -------------
[0mn: 11
going to replace vertex 0 of level l0 0 <= 1
going to replace vertex 4 of level l0 1 <= 1
going to replace vertex 6 of level l0 1 <= 1
going to replace vertex 10 of level l0 1 <= 1
vertex 0 at level 0 is TRUE
vertex 1 at level 2 is FALSE
vertex 2 at level 2 is FALSE
vertex 3 at level 2 is FALSE
vertex 4 at level 1 is TRUE
vertex 5 at level 2 is FALSE
vertex 6 at level 1 is TRUE
vertex 7 at level 2 is FALSE
vertex 8 at level 2 is FALSE
vertex 9 at level 2 is FALSE
vertex 10 at level 1 is TRUE
vertex 999999 at level 0 is TRUE
foundedge 4, 5   !!!!!!!going to add 999999, 5     going to delete 4, 5
foundedge 4, 9   !!!!!!!going to add 999999, 9     going to delete 4, 9
foundedge 4, 1   !!!!!!!going to add 999999, 1     going to delete 4, 1
foundedge 6, 2   !!!!!!!going to add 999999, 2     going to delete 6, 2
foundedge 6, 7   !!!!!!!going to add 999999, 7     going to delete 6, 7
foundedge 10, 1     going to delete 10, 1
foundedge 10, 8   !!!!!!!going to add 999999, 8     going to delete 10, 8
foundedge 10, 3   !!!!!!!going to add 999999, 3     going to delete 10, 3
foundedge 10, 2     going to delete 10, 2
finishing
edges to add size: 7
adding: (999999, 1)   (999999, 2)   (999999, 3)   (999999, 5)   (999999, 7)   (999999, 8)   (999999, 9)   
edges to remove size: 9
removing: (4, 1)   (4, 5)   (4, 9)   (6, 2)   (6, 7)   (10, 1)   (10, 2)   (10, 3)   (10, 8)   
killing vertex 0
killing vertex 4
killing vertex 6
killing vertex 10
[32m-------------------- 7 - New BFS and Make Max Planar -----
[0mroot: 999999
n:    8
  tree edge 999999, 1
  tree edge 999999, 2
  tree edge 999999, 3
  tree edge 999999, 5
  tree edge 999999, 7
  tree edge 999999, 8
  tree edge 999999, 9
[31m
**********************  Graph  **************************
vert 1   hos edges 9 999999 8 2 
vert 2   hos edges 3 999999 8 1 9 
vert 3   hos edges 2 8 7 999999 
vert 5   hos edges 7 8 999999 
vert 7   hos edges 5 3 999999 8 
vert 8   hos edges 3 5 999999 1 2 7 
vert 9   hos edges 1 999999 2 
vert 999999   hos edges 1 2 3 5 7 8 9 
*********************************************************

[0m[32m----------------------- 8 - Locate Cycle -----------------
[0marbitrarily choosing nontree edge: 3, 2
ancestors v1...
ancestors v2...
common ancestor: 999999
3 999999 2 3 999999 2 3 999999 2 3 999999 2 3 999999 2 total inside cost:  5
total outside cost: 0
[32m---------------------------- 9 - Improve Separator -----------
[0m[31m
**********************  Edges  **************************
3, 2
8, 3
9, 1
7, 5
3, 7
8, 5
999999, 1
999999, 2
999999, 3
999999, 5
999999, 7
999999, 8
999999, 9
1, 8
2, 8
2, 1
2, 9
7, 8
*********************************************************

[0mfound cycle with inside cost < 2/3: 5
cycle verts: 3 999999 2 
[32m
------------ 10  - Construct Vertex Partition --------------
[0m[31m
**********************  Graph  **************************
vert 0   hos edges 0 0 0 
vert 0   hos edges 0 0 0 
vert 0   hos edges 0 0 0 
vert 0   hos edges 0 0 0 0 
vert 0   hos edges 0 0 0 0 
vert 0   hos edges 0 0 0 
vert 0   hos edges 0 0 0 
vert 0   hos edges 0 0 0 
vert 0   hos edges 0 0 0 
vert 0   hos edges 0 0 
vert 0   hos edges 0 0 0 0 0 
*********************************************************

[0ml0: 1
l1: 2
l2: 3
r: 2
level of 0: 0, 0 belongs to first part
level of 0: 0, 0 belongs to first part
level of 0: 0, 0 belongs to first part
level of 0: 0, 0 belongs to first part
level of 0: 0, 0 belongs to first part
level of 0: 0, 0 belongs to first part
level of 0: 0, 0 belongs to first part
level of 0: 0, 0 belongs to first part
level of 0: 0, 0 belongs to first part
level of 0: 0, 0 belongs to first part
level of 0: 0, 0 belongs to first part

loading graph
n: 11
starting lipton tarjan...
g

**********************  Graph  **************************
vert 0   hos edges 6 10 4 
vert 1   hos edges 10 4 9 
vert 2   hos edges 6 3 10 
vert 3   hos edges 2 8 7 10 
vert 4   hos edges 1 5 9 0 
vert 5   hos edges 4 7 8 
vert 6   hos edges 0 2 7 
vert 7   hos edges 6 5 3 
vert 8   hos edges 3 10 5 
vert 9   hos edges 1 4 
vert 10   hos edges 1 8 2 0 3 
*********************************************************

---------------------------- 1 - Check Planarity  ------------
planar ok

**********************  Graph  **************************
vert 0   hos edges 0 0 0 
vert 0   hos edges 0 0 0 
vert 0   hos edges 0 0 0 
vert 0   hos edges 0 0 0 0 
vert 0   hos edges 0 0 0 0 
vert 0   hos edges 0 0 0 
vert 0   hos edges 0 0 0 
vert 0   hos edges 0 0 0 
vert 0   hos edges 0 0 0 
vert 0   hos edges 0 0 
vert 0   hos edges 0 0 0 0 0 
*********************************************************

---------------------------- 2 - Connected Components --------
# of components: 1
too big
biggest component: 0
---------------------------- 3 - BFS and Levels ------------
  tree edge 0, 0
  tree edge 0, 0
  tree edge 0, 0
  tree edge 0, 0
  tree edge 0, 0
  tree edge 0, 0
  tree edge 0, 0
  tree edge 0, 0
  tree edge 0, 0
  tree edge 0, 0
level/cost of vert 0: 0
level/cost of vert 0: 2
level/cost of vert 0: 2
level/cost of vert 0: 2
level/cost of vert 0: 1
level/cost of vert 0: 2
level/cost of vert 0: 1
level/cost of vert 0: 2
level/cost of vert 0: 2
level/cost of vert 0: 2
level/cost of vert 0: 1
L[0]: 1
L[1]: 3
L[2]: 7
L[3]: 0
---------------------------- 4 - l1 and k  ------------
k:  11      # of verts in levels 0 thru l1
l1: 2      total cost of levels 0 thru l1 barely exceeds 1/2
---------------------------- 5 - Find More Levels -------
sq:    6.63325
snk:   0
l0: 1     highest level <= l1
l2: 3     lowest  level >= l1 + 1
---------------------------- 6 - Shrinktree -------------
n: 11
going to replace vertex 0 of level l0 0 <= 1
going to replace vertex 0 of level l0 1 <= 1
going to replace vertex 0 of level l0 1 <= 1
going to replace vertex 0 of level l0 1 <= 1
vertex 0 at level 0 is TRUE
vertex 0 at level 2 is FALSE
vertex 0 at level 2 is FALSE
vertex 0 at level 2 is FALSE
vertex 0 at level 1 is TRUE
vertex 0 at level 2 is FALSE
vertex 0 at level 1 is TRUE
vertex 0 at level 2 is FALSE
vertex 0 at level 2 is FALSE
vertex 0 at level 2 is FALSE
vertex 0 at level 1 is TRUE
vertex 999999 at level 0 is TRUE
foundedge 0, 0   !!!!!!!going to add 999999, 0     going to delete 0, 0
foundedge 0, 0   !!!!!!!going to add 999999, 0     going to delete 0, 0
foundedge 0, 0   !!!!!!!going to add 999999, 0     going to delete 0, 0
foundedge 0, 0   !!!!!!!going to add 999999, 0     going to delete 0, 0
foundedge 0, 0   !!!!!!!going to add 999999, 0     going to delete 0, 0
foundedge 0, 0     going to delete 0, 0
foundedge 0, 0   !!!!!!!going to add 999999, 0     going to delete 0, 0
foundedge 0, 0   !!!!!!!going to add 999999, 0     going to delete 0, 0
foundedge 0, 0     going to delete 0, 0
finishing
edges to add size: 7
adding: (999999, 0)   (999999, 0)   (999999, 0)   (999999, 0)   (999999, 0)   (999999, 0)   (999999, 0)   
edges to remove size: 9
removing: (0, 0)   (0, 0)   (0, 0)   (0, 0)   (0, 0)   (0, 0)   (0, 0)   (0, 0)   (0, 0)   
killing vertex 0
killing vertex 0
killing vertex 0
killing vertex 0
-------------------- 7 - New BFS and Make Max Planar -----
root: 999999
n:    8
  tree edge 999999, 0
  tree edge 999999, 0
  tree edge 999999, 0
  tree edge 999999, 0
  tree edge 999999, 0
  tree edge 999999, 0
  tree edge 999999, 0

**********************  Graph  **************************
vert 0   hos edges 0 999999 0 0 
vert 0   hos edges 0 999999 0 0 0 
vert 0   hos edges 0 0 0 999999 
vert 0   hos edges 0 0 999999 
vert 0   hos edges 0 0 999999 0 
vert 0   hos edges 0 0 999999 0 0 0 
vert 0   hos edges 0 999999 0 
vert 999999   hos edges 0 0 0 0 0 0 0 
*********************************************************

----------------------- 8 - Locate Cycle -----------------
arbitrarily choosing nontree edge: 0, 0
ancestors v1...
ancestors v2...
common ancestor: 999999
total inside cost:  5
total outside cost: 0
---------------------------- 9 - Improve Separator -----------

**********************  Edges  **************************
0, 0
0, 0
0, 0
0, 0
0, 0
0, 0
999999, 0
999999, 0
999999, 0
999999, 0
999999, 0
999999, 0
999999, 0
0, 0
0, 0
0, 0
0, 0
0, 0
*********************************************************

found cycle with inside cost < 2/3: 5
cycle verts: 0 999999 0 

------------ 10  - Construct Vertex Partition --------------

**********************  Graph  **************************
vert 0   hos edges 6 10 4 
vert 1   hos edges 10 4 9 
vert 2   hos edges 6 3 10 
vert 3   hos edges 2 8 7 10 
vert 4   hos edges 1 5 9 0 
vert 5   hos edges 4 7 8 
vert 6   hos edges 0 2 7 
vert 7   hos edges 6 5 3 
vert 8   hos edges 3 10 5 
vert 9   hos edges 1 4 
vert 10   hos edges 1 8 2 0 3 
*********************************************************

l0: 1
l1: 2
l2: 3
r: 2
level of 0: 0, 0 belongs to first part
level of 1: 0, 1 belongs to first part
level of 2: 0, 2 belongs to first part
level of 3: 0, 3 belongs to first part
level of 4: 0, 4 belongs to first part
level of 5: 0, 5 belongs to first part
level of 6: 0, 6 belongs to first part
level of 7: 0, 7 belongs to first part
level of 8: 0, 8 belongs to first part
level of 9: 0, 9 belongs to first part
level of 10: 0, 10 belongs to first part
